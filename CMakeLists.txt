cmake_minimum_required(VERSION 3.20)
project(Toaster)
set(CMAKE_CXX_STANDARD 14)
if(APPLE)
    find_package(OpenGL REQUIRED)
    set(PROJECT_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/include/apple)
    set(PROJECT_LIB_DIR ${PROJECT_SOURCE_DIR}/libs/apple)
    include_directories(${PROJECT_INCLUDE_DIR})
    link_directories(${PROJECT_LIB_DIR})
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/builds/apple)
else()
    set(PROJECT_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/include/windows)
    set(PROJECT_LIB_DIR ${PROJECT_SOURCE_DIR}/libs/windows)
    include_directories(${PROJECT_INCLUDE_DIR})
    link_directories(${PROJECT_LIB_DIR})
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/builds/windows)
endif()

FILE(GLOB SOURCE_FILES "${PROJECT_SOURCE_DIR}/src/code/*.cpp" "${PROJECT_SOURCE_DIR}/src/code/*.c")
FILE(GLOB HEADER_FILES "${PROJECT_SOURCE_DIR}/src/headers/*.hpp/src/headers/*.hpp" "${PROJECT_SOURCE_DIR}/src/headers/*.h")
add_executable(Toaster ${SOURCE_FILES} ${HEADER_FILES})
if(APPLE)
    target_link_libraries(${PROJECT_NAME} glfw3 "-framework Cocoa" "-framework OpenGL" "-framework IOKit")
    add_compile_definitions(APPLE)
else()
    target_link_libraries(${PROJECT_NAME} glfw3 opengl32)
    add_compile_definitions(WINDOWS)
endif()



